basePath: /
definitions:
  models.Group:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Music:
    properties:
      group:
        $ref: '#/definitions/models.Group'
      id:
        type: integer
      link:
        example: https://example.com
        type: string
      releaseDate:
        example: DD.MM.YYYY
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  responses.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  responses.SuccessID:
    properties:
      id:
        type: integer
    type: object
  responses.SuccessMusics:
    properties:
      songs:
        items:
          $ref: '#/definitions/services.MusicToGet'
        type: array
    type: object
  responses.SuccessStatus:
    properties:
      status:
        type: string
    type: object
  responses.SuccessText:
    properties:
      text:
        type: string
    type: object
  services.MusicToAdd:
    properties:
      group:
        type: string
      link:
        example: https://example.com
        type: string
      releaseDate:
        example: DD.MM.YYYY
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - link
    - releaseDate
    - song
    type: object
  services.MusicToGet:
    properties:
      group:
        $ref: '#/definitions/models.Group'
      id:
        type: integer
      link:
        example: https://example.com
        type: string
      releaseDate:
        example: DD.MM.YYYY
        type: string
      song:
        type: string
    type: object
  services.MusicToPartialUpdate:
    properties:
      group:
        type: string
      link:
        example: https://example.com
        type: string
      releaseDate:
        example: DD.MM.YYYY
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  services.MusicToUpdate:
    properties:
      group:
        type: string
      link:
        example: https://example.com
        type: string
      releaseDate:
        example: DD.MM.YYYY
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - link
    - song
    - text
    type: object
host: localhost:8090
info:
  contact: {}
  description: API Server for Library music service
  title: Library music API
  version: "1.0"
paths:
  /api/add:
    post:
      consumes:
      - application/json
      description: Create a new music
      operationId: create-music
      parameters:
      - description: Music info to add
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.MusicToAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: AddMusic
      tags:
      - music
  /api/delete:
    delete:
      consumes:
      - application/json
      description: delete music
      operationId: delete-music
      parameters:
      - description: Id song
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: DeleteMusic
      tags:
      - music
  /api/getAll:
    get:
      consumes:
      - application/json
      description: get all music
      operationId: get-all-music
      parameters:
      - description: Song name
        in: query
        name: song
        type: string
      - description: Music group
        in: query
        name: group
        type: string
      - description: Link song
        in: query
        name: link
        type: string
      - description: Text song
        in: query
        name: text
        type: string
      - description: Release date
        in: query
        name: releaseDate
        type: string
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessMusics'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: GetMusicList
      tags:
      - music
  /api/getText:
    get:
      consumes:
      - application/json
      description: get text music
      operationId: get-text-music
      parameters:
      - description: Song name
        in: query
        name: song
        required: true
        type: string
      - description: Music group
        in: query
        name: group
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessText'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: GetTextMusic
      tags:
      - music
  /api/info:
    get:
      consumes:
      - application/json
      description: get music
      operationId: get-music
      parameters:
      - description: Song name
        in: query
        name: song
        required: true
        type: string
      - description: Music group
        in: query
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Music'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: GetMusic
      tags:
      - music
  /api/update:
    patch:
      consumes:
      - application/json
      description: update partial music
      operationId: update-partial-music
      parameters:
      - description: Id song
        in: query
        name: id
        required: true
        type: integer
      - description: Music info to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.MusicToPartialUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: UpdatePartialMusic
      tags:
      - music
    put:
      consumes:
      - application/json
      description: update music
      operationId: update-music
      parameters:
      - description: Id song
        in: query
        name: id
        required: true
        type: integer
      - description: Music info to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.MusicToUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: UpdateMusic
      tags:
      - music
swagger: "2.0"
